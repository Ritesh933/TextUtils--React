{"version":3,"sources":["Components/About.js","Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","border","borderColor","react_default","a","createElement","Fragment","className","id","style","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","concat","react_router_dom","to","tittle","aria-label","aria-current","Home","onClick","bootsColor","height","width","cursor","toggleMode","role","htmlFor","colorGenerator","TextForm","word","_useState","useState","_useState2","Object","slicedToArray","text","setText","heading","rows","value","charAt","toUpperCase","slice","onChange","event","target","disabled","length","newText","showAlert","toLowerCase","navigator","clipboard","writeText","split","filter","element","prototype","PropTypes","string","isRequired","defaultProps","Alert","alert","msg","App","setMode","_useState3","_useState4","setAlert","removeBodyClass","document","body","classList","remove","title","randomNumber","Math","random","floor","toString","querySelector","background","cls","toggle","Components_Alert","react_router","exact","path","message","setTimeout","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","src_App_0"],"mappings":"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","file":"static/js/main.b5cf743d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function About(props) {\r\n  // const [myStyle, setMyStyle] = useState({\r\n  //   color: \"black\",\r\n  //   backgroundColor: \"white\",\r\n  // });\r\n\r\n  let myStyle={\r\n    color:props.mode==='dark'?'white':\"black\",\r\n    backgroundColor:props.mode==='dark'?'#232425':'white',\r\n    border:'2px solid',\r\n    borderColor:props.mode==='dark'?'white':\"black\",\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n<div className=\"container accordion py-3 \" id=\"accordionExample\">\r\n<h2  style={{color:props.mode==='dark'?'white':'black'}}>About us</h2>\r\n  <div className=\"accordion-item\" style={myStyle}>\r\n    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n      <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        Accordion Item #1\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the first item's accordion body.</strong> It is shown by default, the appropriat<code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\" style={myStyle}>\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\" >\r\n      <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        Accordion Item #2\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate. <code>.accordion-body</code>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\" style={myStyle}>\r\n    <h2 className=\"accordion-header\" id=\"headingThree\" >\r\n      <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n        Accordion Item #3\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate. <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n    </>\r\n  );\r\n}\r\n","  import React from \"react\";\r\n  import PropTypes from \"prop-types\";\r\n  import { Link } from \"react-router-dom\";\r\n\r\n  export default function Navbar(props) {\r\n    // const colorGenerator = () => {\r\n    //   const randomNumber = Math.random();\r\n    //   const randomColor = Math.floor(randomNumber * 16777215);\r\n    //   const color = \"#\" + randomColor.toString(16);\r\n    //   const g = document.querySelector(\".btn\");\r\n    //   g.style.borderColor = color;\r\n    //   document.body.style.background = color;\r\n    // };\r\n    return (\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}  py-2`}\r\n      >\r\n        <div className=\"container-fluid \">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            {props.tittle}\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse \" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item \">\r\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">\r\n                  {props.Home}\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">\r\n                  {props.About}\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n\r\n            <div className=\"d-flex\">\r\n              <div\r\n                className=\"bg-primary rounded mx-2\"\r\n                onClick={() => {\r\n                  props.bootsColor(\"primary\");\r\n                }}\r\n                style={{ height: \"30px\", width: \"30px\", cursor: \"pointer\" }}\r\n              ></div>\r\n              <div\r\n                className=\"bg-danger rounded mx-2\"\r\n                onClick={() => {\r\n                  props.bootsColor(\"danger\");\r\n                }}\r\n                style={{ height: \"30px\", width: \"30px\", cursor: \"pointer\" }}\r\n              ></div>\r\n              <div\r\n                className=\"bg-success rounded mx-2\"\r\n                onClick={() => {\r\n                  props.bootsColor(\"success\");\r\n                }}\r\n                style={{ height: \"30px\", width: \"30px\", cursor: \"pointer\" }}\r\n              ></div>\r\n              <div\r\n                className=\"bg-warning rounded mx-2\"\r\n                onClick={() => {\r\n                  props.bootsColor(\"warning\");\r\n                }}\r\n                style={{ height: \"30px\", width: \"30px\", cursor: \"pointer\" }}\r\n              ></div>\r\n               <div\r\n                className=\"bg-info rounded mx-2\"\r\n                onClick={() => {\r\n                  props.bootsColor(\"info\");\r\n                }}\r\n                style={{ height: \"30px\", width: \"30px\", cursor: \"pointer\" }}\r\n              ></div>\r\n\r\n              <div\r\n                className=\"bg-secondary rounded mx-2\"\r\n                onClick={() => {\r\n                  props.bootsColor(\"secondary\");\r\n                }}\r\n                style={{ height: \"30px\", width: \"30px\", cursor: \"pointer\" }}\r\n              ></div>\r\n            </div>\r\n\r\n            <div\r\n              className={` form-check px-5 py-2 form-switch text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n            >\r\n              <input\r\n                onClick={() => {\r\n                  props.toggleMode();\r\n                }}\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                {props.mode === \"light\" ? \"dark\" : \"light\"}\r\n              </label>\r\n            </div>\r\n\r\n            <button\r\n              className={`btn btn-outline-success`}\r\n              onClick={() => {\r\n                props.colorGenerator();\r\n              }}\r\n              type=\"submit\"\r\n            >\r\n              CG\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n\r\n  Navbar.prototype = {\r\n    tittle: PropTypes.string.isRequired,\r\n    Home: PropTypes.string,\r\n  };\r\n\r\n  // props declaring----->>>\r\n  Navbar.defaultProps = {\r\n    tittle: \"TextUtils\",\r\n    Home: \"Home\",\r\n    About: \"About\",\r\n  };\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const changeUpperState = () => {\r\n    // console.log(\"Uppercase convertion \" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converd in upperCase\",\"info\")\r\n  };\r\n\r\n  const changeLowerState = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converd in lowerCase\",\"warning\")\r\n  };\r\n  const clearText = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Notes has been cleen\",\"secondary\")\r\n  };\r\n\r\n  const copyText = () => {\r\n    // const text = document.querySelector(\"#mytext\");\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"Copied to Clipboard successfully\",\"primary\")\r\n  };\r\n\r\n  const onChangeEvent = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const capitalized = (word) => {\r\n    // const lower = word.toLowerCase();\r\n    return word.charAt(0).toUpperCase() + word.slice(1);\r\n  };\r\n  const [text, setText] = useState(\"Enter new text\");\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h3>{props.heading}</h3>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"mytext\"\r\n            rows=\"6\"\r\n            value={capitalized(text)}\r\n            onChange={onChangeEvent}\r\n            style={{\r\n\r\n              \r\n              backgroundColor: props.mode === \"dark\" ? \"gray\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"container\">\r\n        <button disabled={text.length===0} className=\"btn btn-warning mx-2 my-2\" onClick={changeUpperState}>\r\n          Uppercase\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-success mx-2 my-2\" onClick={changeLowerState}>\r\n          Lowercase\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-danger mx-2 my-2\" onClick={clearText}>\r\n          clear\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-dark mx-2 my-2\" onClick={copyText}>\r\n          copy\r\n        </button></div>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n        }}\r\n      >\r\n        <h3>Your text summary</h3>\r\n        <p>\r\n          {text.split(/s+/).filter((element)=>{\r\n            return element.length!==0\r\n          }).length} words and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(/s+/).filter((element)=>{\r\n            return element.length!==0\r\n          }).length} minute in read</p>\r\n        <h4>Preview</h4>\r\n        <p>{text.length > 0 ? text : \"Enter something in the notes text\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalized = (word) => {\r\n    // const lower = word.toLowerCase();\r\n    return word.charAt(0).toUpperCase() + word.slice(1);\r\n  };\r\n\r\n  return (\r\n    <div style={{height:\"45px\"}}>\r\n      {props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalized(props.alert.type)}</strong>: {props.alert.msg}\r\n      </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\nimport About from \"./Components/About\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\nimport Alert from \"./Components/Alert\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n// it is a js+html\n\nlet name = \"Room\";\nconst App = () => {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\nconst removeBodyClass=()=>{\n  document.body.classList.remove('bg-danger')\n  document.body.classList.remove('bg-light')\n  document.body.classList.remove('bg-success')\n  document.body.classList.remove('bg-dark')\n  document.body.classList.remove('bg-secondary')\n  document.body.classList.remove('bg-primary')\n  document.body.classList.remove('bg-warning')\n  document.body.classList.remove('bg-info')\n}\n\nconst colorGenerator = () => {\n  removeBodyClass();\n  const randomNumber = Math.random();\n  const randomColor = Math.floor(randomNumber * 16777215);\n  const color = \"#\" + randomColor.toString(16);\n  const g = document.querySelector(\".btn\");\n  g.style.borderColor = color;\n  document.body.style.background = color;\n};\n\nconst bootsColor=(cls)=>{\n  removeBodyClass();\n  document.body.classList.toggle(\"bg-\" + cls);\n}\n\n  const toggleMode = () => {\n  removeBodyClass();\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#0F0D12\";\n      document.title = \"TextUtil - Dark Mode\";\n    } else if (mode === \"dark\") {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.title = \"TextUtil - Light Mode\";\n    }\n  };\n\n  return (\n    <>\n      <Router>\n        <Navbar mode={mode} toggleMode={toggleMode} colorGenerator={colorGenerator} bootsColor={bootsColor}/>\n        <Alert alert={alert} />\n        <Switch>\n          <Route exact path=\"/about\">\n            <About mode={mode} />\n          </Route>\n          <Route exact path=\"/\">\n            <TextForm heading=\"Write notes\" mode={mode} showAlert={showAlert} />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport TextForm from \"./Components/TextForm\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n\n  <>\n  <App />\n  </>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}