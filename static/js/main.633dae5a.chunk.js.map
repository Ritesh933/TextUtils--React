{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","tittle","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","Home","onClick","bootsColor","style","height","width","cursor","toggleMode","role","htmlFor","colorGenerator","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","color","heading","rows","value","onChange","event","target","backgroundColor","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","filter","element","prototype","PropTypes","string","isRequired","defaultProps","About","Alert","word","alert","charAt","slice","msg","App","setMode","_useState3","_useState4","setAlert","removeBodyClass","document","body","classList","remove","title","randomNumber","Math","random","floor","toString","querySelector","borderColor","background","cls","add","Components_Alert","message","setTimeout","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","src_App_0"],"mappings":"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","file":"static/js/main.633dae5a.chunk.js","sourcesContent":["  import React from \"react\";\r\n  import PropTypes from \"prop-types\";\r\n  import { Link } from \"react-router-dom\";\r\n\r\n  export default function Navbar(props) {\r\n    // const colorGenerator = () => {\r\n    //   const randomNumber = Math.random();\r\n    //   const randomColor = Math.floor(randomNumber * 16777215);\r\n    //   const color = \"#\" + randomColor.toString(16);\r\n    //   const g = document.querySelector(\".btn\");\r\n    //   g.style.borderColor = color;\r\n    //   document.body.style.background = color;\r\n    // };\r\n    return (\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}  py-2`}\r\n      >\r\n        <div className=\"container-fluid \">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.tittle}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse \" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item \">\r\n                <a className=\"nav-link \" aria-current=\"page\" href=\"#\">\r\n                  {props.Home}\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/about\">\r\n                  {props.About}\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n\r\n            <div className=\"d-flex\">\r\n              <div\r\n                className=\"bg-primary rounded mx-2\"\r\n                onClick={() => {\r\n                  props.bootsColor(\"primary\");\r\n                }}\r\n                style={{ height: \"30px\", width: \"30px\", cursor: \"pointer\" }}\r\n              ></div>\r\n              <div\r\n                className=\"bg-danger rounded mx-2\"\r\n                onClick={() => {\r\n                  props.bootsColor(\"danger\");\r\n                }}\r\n                style={{ height: \"30px\", width: \"30px\", cursor: \"pointer\" }}\r\n              ></div>\r\n              <div\r\n                className=\"bg-success rounded mx-2\"\r\n                onClick={() => {\r\n                  props.bootsColor(\"success\");\r\n                }}\r\n                style={{ height: \"30px\", width: \"30px\", cursor: \"pointer\" }}\r\n              ></div>\r\n              <div\r\n                className=\"bg-warning rounded mx-2\"\r\n                onClick={() => {\r\n                  props.bootsColor(\"warning\");\r\n                }}\r\n                style={{ height: \"30px\", width: \"30px\", cursor: \"pointer\" }}\r\n              ></div>\r\n               <div\r\n                className=\"bg-info rounded mx-2\"\r\n                onClick={() => {\r\n                  props.bootsColor(\"info\");\r\n                }}\r\n                style={{ height: \"30px\", width: \"30px\", cursor: \"pointer\" }}\r\n              ></div>\r\n\r\n              <div\r\n                className=\"bg-secondary rounded mx-2\"\r\n                onClick={() => {\r\n                  props.bootsColor(\"secondary\");\r\n                }}\r\n                style={{ height: \"30px\", width: \"30px\", cursor: \"pointer\" }}\r\n              ></div>\r\n            </div>\r\n\r\n            <div\r\n              className={` form-check px-5 py-2 form-switch text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n            >\r\n              <input\r\n                onClick={() => {\r\n                  props.toggleMode();\r\n                }}\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                {props.mode === \"light\" ? \"dark\" : \"light\"}\r\n              </label>\r\n            </div>\r\n\r\n            <button\r\n              className={`btn btn-outline-success`}\r\n              onClick={() => {\r\n                props.colorGenerator();\r\n              }}\r\n              type=\"submit\"\r\n            >\r\n              ColorPellet\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n\r\n  Navbar.prototype = {\r\n    tittle: PropTypes.string.isRequired,\r\n    Home: PropTypes.string,\r\n  };\r\n\r\n  // props declaring----->>>\r\n  Navbar.defaultProps = {\r\n    tittle: \"TextUtils\",\r\n    Home: \"Home\",\r\n    About: \"About\",\r\n  };\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const changeUpperState = () => {\r\n    // console.log(\"Uppercase convertion \" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converd in upperCase\",\"info\")\r\n  };\r\n\r\n  const changeLowerState = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converd in lowerCase\",\"warning\")\r\n  };\r\n  const clearText = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Notes has been cleen\",\"secondary\")\r\n  };\r\n\r\n  const copyText = () => {\r\n    // const text = document.querySelector(\"#mytext\");\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"Copied to Clipboard successfully\",\"primary\")\r\n  };\r\n\r\n  const onChangeEvent = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const [text, setText] = useState(\"Enter new text\");\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h3>{props.heading}</h3>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"mytext\"\r\n            rows=\"6\"\r\n            value={text}\r\n            onChange={onChangeEvent}\r\n            style={{\r\n\r\n              \r\n              backgroundColor: props.mode === \"dark\" ? \"gray\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"container\">\r\n        <button disabled={text.length===0} className=\"btn btn-warning mx-2 my-2\" onClick={changeUpperState}>\r\n          Uppercase\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-success mx-2 my-2\" onClick={changeLowerState}>\r\n          Lowercase\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-danger mx-2 my-2\" onClick={clearText}>\r\n          clear\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-dark mx-2 my-2\" onClick={copyText}>\r\n          copy\r\n        </button></div>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n        }}\r\n      >\r\n        <h3>Your text summary</h3>\r\n        <p>\r\n          {text.split(/s+/).filter((element)=>{\r\n            return element.length!==0\r\n          }).length} words and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(/s+/).filter((element)=>{\r\n            return element.length!==0\r\n          }).length} minute in read</p>\r\n        <h4>Preview</h4>\r\n        <p>{text.length > 0 ? text : \"Enter something in the notes text\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalized = (word) => {\r\n    // const lower = word.toLowerCase();\r\n    return word.charAt(0).toUpperCase() + word.slice(1);\r\n  };\r\n\r\n  return (\r\n    <div style={{height:\"45px\"}}>\r\n      {props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalized(props.alert.type)}</strong>: {props.alert.msg}\r\n      </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\n// import About from \"./Components/About\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\nimport Alert from \"./Components/Alert\";\nimport React, { useState } from \"react\";\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n// it is a js+html\n\nlet name = \"Room\";\nconst App = () => {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const removeBodyClass = () => {\n    document.body.classList.remove(\"bg-danger\");\n    document.body.classList.remove(\"bg-light\");\n    document.body.classList.remove(\"bg-success\");\n    document.body.classList.remove(\"bg-dark\");\n    document.body.classList.remove(\"bg-secondary\");\n    document.body.classList.remove(\"bg-primary\");\n    document.body.classList.remove(\"bg-warning\");\n    document.body.classList.remove(\"bg-info\");\n  };\n\n  const colorGenerator = () => {\n    removeBodyClass();\n    const randomNumber = Math.random();\n    const randomColor = Math.floor(randomNumber * 16777215);\n    const color = \"#\" + randomColor.toString(16);\n    const g = document.querySelector(\".btn\");\n    g.style.borderColor = color;\n    document.body.style.background = color;\n  };\n\n  const bootsColor = (cls) => {\n    removeBodyClass();\n    document.body.classList.add(\"bg-\" + cls);\n  };\n\n  const toggleMode = () => {\n    removeBodyClass();\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#0F0D12\";\n      document.title = \"TextUtil - Dark Mode\";\n    } else if (mode === \"dark\") {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.title = \"TextUtil - Light Mode\";\n    }\n  };\n\n  return (\n    <>\n      <Navbar\n        mode={mode}\n        toggleMode={toggleMode}\n        colorGenerator={colorGenerator}\n        bootsColor={bootsColor}\n      />\n      <Alert alert={alert} />\n      <TextForm heading=\"Write notes\" mode={mode} showAlert={showAlert} />\n      {/* <Router>\n          <Switch>\n            <Route exact path=\"/about\">\n              <About mode={mode} />\n            </Route>\n            <Route exact path=\"/\">\n            </Route>\n          </Switch>\n        </Router> */}\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n// import TextForm from \"./Components/TextForm\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <>\n    <App />\n  </>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}