{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","tittle","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","Home","onClick","toggleMode","role","htmlFor","placeholder","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","rows","value","onChange","event","target","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","document","querySelector","navigator","clipboard","writeText","split","length","prototype","PropTypes","string","isRequired","defaultProps","About","Alert","word","alert","charAt","slice","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","title","Components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","src_App_0"],"mappings":"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","file":"static/js/main.0d0c6dfb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg py-3 navbar-${props.mode} bg-${props.mode}  py-0`}\r\n    >\r\n      <div className=\"container-fluid \">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.tittle}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse \" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item \">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                {props.Home}\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/about\">\r\n                {props.About}\r\n              </a>\r\n            </li> */}\r\n          </ul>\r\n\r\n          <div\r\n            className={`form-check px-5 py-2 form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              onClick={props.toggleMode}\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              {props.mode === \"light\" ? \"dark\" : \"light\"}\r\n            </label>\r\n          </div>\r\n\r\n          <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.prototype = {\r\n  tittle: PropTypes.string.isRequired,\r\n  Home: PropTypes.string,\r\n};\r\n\r\n// props declaring----->>>\r\nNavbar.defaultProps = {\r\n  tittle: \"textUtils\",\r\n  Home: \"Home\",\r\n  About: \"About\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const changeUpperState = () => {\r\n    // console.log(\"Uppercase convertion \" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converd in upperCase\",\"info\")\r\n  };\r\n\r\n  const changeLowerState = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converd in lowerCase\",\"warning\")\r\n  };\r\n  const clearText = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Notes has been cleen\",\"secondary\")\r\n  };\r\n\r\n  const copyText = () => {\r\n    const text = document.querySelector(\"#mytext\");\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to Clipboard successfully\",\"primary\")\r\n  };\r\n\r\n  const onChangeEvent = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const [text, setText] = useState(\"Enter new text\");\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h3>{props.heading}</h3>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"mytext\"\r\n            rows=\"6\"\r\n            value={text}\r\n            onChange={onChangeEvent}\r\n            style={{\r\n\r\n              \r\n              backgroundColor: props.mode === \"dark\" ? \"gray\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-warning mx-1\" onClick={changeUpperState}>\r\n          Uppercase\r\n        </button>\r\n        <button className=\"btn btn-success mx-3\" onClick={changeLowerState}>\r\n          Lowercase\r\n        </button>\r\n        <button className=\"btn btn-danger mx-3\" onClick={clearText}>\r\n          clear\r\n        </button>\r\n        <button className=\"btn btn-dark mx-3\" onClick={copyText}>\r\n          copy\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n        }}\r\n      >\r\n        <h3>Your text summary</h3>\r\n        <p>\r\n          {text.split(\" \").length - 1} words and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} minute in read</p>\r\n        <h4>Preview</h4>\r\n        <p>{text.length > 0 ? text : \"Enter something in the notes text\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalized = (word) => {\r\n    // const lower = word.toLowerCase();\r\n    return word.charAt(0).toUpperCase() + word.slice(1);\r\n  };\r\n\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show my-2 mx-2`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalized(props.alert.type)}</strong>: {props.alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","  import \"./App.css\";\n  import About from \"./Components/About\";\n  import Navbar from \"./Components/Navbar\";\n  import TextForm from \"./Components/TextForm\";\n  import Alert from \"./Components/Alert\";\n  import React, { useState } from \"react\";\n  import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n  // it is a js+html\n\n  let name = \"Room\";\n  const App = () => {\n    const [mode, setMode] = useState(\"light\");\n    const [alert, setAlert] = useState(null);\n\n    const showAlert = (message, type) => {\n      setAlert({\n        msg: message,\n        type: type,\n      });\n      setTimeout(() => {\n        setAlert(null);\n      }, 2000);\n    };\n\n    const toggleMode = () => {\n      if (mode === \"light\") {\n        setMode(\"dark\");\n        document.body.style.backgroundColor = \"#444444\";\n        showAlert(\"Dark mode has been enable\", \"danger\");\n        document.title = \"TextUtil - Dark Mode\";\n      } else if (mode === \"dark\") {\n        setMode(\"light\");\n        document.body.style.backgroundColor = \"white\";\n        showAlert(\"Light Mode has been enable\", \"success\");\n        document.title = \"TextUtil - Light Mode\";\n      }\n    };\n    return (\n      <>\n          <Navbar mode={mode} toggleMode={toggleMode} />\n          <Alert alert={alert} />\n        {/* <Router>\n          <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/\"> */}\n              <TextForm heading=\"Write notes\" mode={mode} showAlert={showAlert} />\n            {/* </Route>\n          </Switch>\n        </Router> */}\n      </>\n    );\n  };\n\n  export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport TextForm from \"./Components/TextForm\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n\n  <>\n  <App />\n  </>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}